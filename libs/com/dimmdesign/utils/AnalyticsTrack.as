package com.dimmdesign.utils {		import com.google.analytics.AnalyticsTracker;	import com.google.analytics.GATracker;		import flash.display.DisplayObject;		/**	 * 	 * @author dimmdesign	 * Init — AnalyticsTrack.getInstance().initAnalyticsTrack (stage, "UA-XXXXXX-XX", "Bridge", true);	 * Send — AnalyticsTrack.getInstance().sendAnalytics ("your title");	 * 	 */		public class AnalyticsTrack {				private static var instance:AnalyticsTrack;		private static var allowInstantiation:Boolean;				private var _tracker:AnalyticsTracker;				/**		 * @public 		 */				public function AnalyticsTrack ():void {			if (!allowInstantiation) {				throw new Error("Error: Instantiation failed: Use AnalyticsTrack.getInstance() instead of new.");			}		}						public static function initAnalyticsTrack(obj:DisplayObject, googleUA:String, method:String = "Bridge", debug:Boolean = false):void {			getInstance()._initAnalyticsTrack(obj, googleUA, method, debug);		}				public static function sendAnalytics(title:String):void {			getInstance()._sendAnalytics(title);		}				public static function trackEvent(category:String, action:String, label:String = null, value:Number = NaN):void {			getInstance()._trackEvent(category, action, label, value);		}				public static function getInstance():AnalyticsTrack {			if (instance == null) {				allowInstantiation = true;				instance = new AnalyticsTrack();				allowInstantiation = false;			}			return instance;		}				/**		 * @private 		 */				private function _initAnalyticsTrack (obj:DisplayObject, googleUA:String, method:String = "Bridge", debug:Boolean = false):void {						_tracker = new GATracker (obj, googleUA, method, debug);					}				private function _sendAnalytics (title:String):void {						_tracker.trackPageview (title);					}				private function _trackEvent(category:String, action:String, label:String = null, value:Number = NaN):void {			_tracker.trackEvent(category, action, label, value)		}			}	}